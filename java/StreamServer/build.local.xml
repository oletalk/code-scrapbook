<?xml version="1.0" encoding="UTF-8"?>
<project name="StreamServer" default="dist" basedir=".">
	<description>MP3/OGG Streaming Server</description>
	<property name="src" location="src"/>
	<property name="build" location="build"/>
	<property name="dist" location="dist"/>
	<property name="opensrc.libs" location="/opt/opensrc"/>
	<property name="commons.libs" location="/opt/opensrc/apache-commons-libs"/>
	<property name="system.libs" location="/usr/local/share/java/classes"/>

	<!-- paths -->
	<path id="build.path">
		<fileset dir="${system.libs}">
			<include name="org.springframework.*.jar"/>
			<include name="postgresql.jar"/>
			<include name="junit.jar"/>
		</fileset>
		<fileset dir="${opensrc.libs}/jar">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${commons.libs}/">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${opensrc.libs}/slf4j-1.7.5/">
			<include name="slf4j-api-1.7.5.jar"/>
			<include name="slf4j-jdk14-1.7.5.jar"/>
		</fileset>
	</path>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}/classes"/>
	</target>
	
	<target name="compile" depends="init"
		description="compile the source" >
		<!-- Compile the java code from src into build -->
		<javac srcdir="${src}" destdir="${build}/classes" classpathref="build.path"/>
	</target>
	
	<target name="copyconf" depends="init" description="copy config files in preparation for jar task">
		<copy todir="${build}/classes">
			<fileset dir="${src}">
				<include name="config.properties"/>
				<include name="clientlist.txt"/>
				<include name="httpServerContext.xml"/>
			</fileset>
		</copy>
	</target>
	
	<target name="copyjars" depends="init">
		<copy todir="${dist}/lib">
			<path refid="build.path"/>
		</copy>
	</target>
	
	<target name="jar" depends="compile,copyconf,copyjars"
		description="generate the jar file">
		<jar destfile="${dist}/StreamServer.jar"
			 basedir="${build}/classes"
			 excludes="**/Test.class">
			<manifest>
				<attribute name="Main-Class" 
					value="net.oletalk.stream.http.SocketServer" />
				<attribute name="Class-Path"
					value="lib/junit.jar lib/org.springframework.aop.jar lib/org.springframework.asm.jar lib/org.springframework.aspects.jar lib/org.springframework.beans.jar lib/org.springframework.context.jar lib/org.springframework.context.support.jar lib/org.springframework.core.jar lib/org.springframework.expression.jar lib/org.springframework.instrument.jar lib/org.springframework.instrument.tomcat.jar lib/commons-logging-1.1.1.jar lib/commons-collections-3.2.1.jar lib/commons-dbcp-1.4.jar lib/commons-net-3.3.jar lib/commons-pool-1.6.jar lib/org.springframework.jdbc.jar lib/org.springframework.jms.jar lib/org.springframework.orm.jar lib/org.springframework.oxm.jar lib/org.springframework.test.jar lib/org.springframework.transaction.jar lib/org.springframework.web.jar lib/org.springframework.web.portlet.jar lib/org.springframework.web.servlet.jar lib/org.springframework.web.struts.jar lib/postgresql.jar lib/jaudiotagger-2.2.0-20130321.142353-1.jar" /><!-- TODO: All the jars from the build path should go here! -->
			</manifest>
		</jar>
	</target>
	
	<target name="run" depends="jar">
		<java jar="${dist}/StreamServer.jar" fork="true" failonerror="true"/>
	</target>
	
	<target name="clean"
		description="clean up" >
		<!-- Delete the build and dist directory trees -->
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>
</project>
